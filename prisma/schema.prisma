generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  password  String
  name      String @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  comments  Comment[]
  scraps    Scrap[]
}

model Post {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  category    String
  subCategory String
  image       String?
  title       String
  contents    String   @db.LongText
  comments    Comment[]
  scraps      Scrap[]

  @@index([userId])
}

model Comment {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  postId      Int
  contents    String   @db.MediumText

  @@index([userId])
  @@index([postId])
}

model Scrap {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId      Int
  postId      Int

  @@index([userId])
  @@index([postId])
}